name: doc

on:
  push:
    branches: [main, master]
    tags:
      - 'v[0-9]+.[0-9]+(.[0-9]+)?'
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set UV_CACHE_DIR
        run: |
          echo "UV_CACHE_DIR=${{ runner.temp }}/.uv-cache" >> "$GITHUB_ENV"

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          python-version: '3.14'

      - name: Restore uv cache
        uses: actions/cache/restore@v4
        id: cache
        with:
          path: ${{ runner.temp }}/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install the project
        run: uv sync --group doc

      - name: Build documents
        run: uv run --group doc make -C doc html

      - name: Upload artifact
        id: artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: doc/build/html

      - name: Minimize uv cache
        run: uv cache prune --ci
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Save uv cache
        uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ runner.temp }}/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/deploy-pages@v4
        id: deployment
