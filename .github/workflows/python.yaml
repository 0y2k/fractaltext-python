name: build
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.14', '3.13', '3.12', '3.11', '3.10']
        include:
          - os: windows-latest
            python-version: 3.14
          - os: macos-latest
            python-version: 3.14

    steps:
      - name: Set UV_CACHE_DIR
        if: runner.os != 'Windows'
        run: |
          echo "UV_CACHE_DIR=${{ runner.temp }}/.uv-cache" >> "$GITHUB_ENV"
      - name: Set UV_CACHE_DIR
        if: runner.os == 'Windows'
        run: |
          echo "UV_CACHE_DIR=${{ runner.temp }}/.uv-cache" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: CRLF for Windows
        if: runner.os == 'Windows'
        run: |
          git config --global core.autocrlf true

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Restore uv cache
        uses: actions/cache/restore@v4
        id: cache
        with:
          path: ${{ runner.temp }}/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install the project
        run: uv sync --all-groups

      - name: Run test
        run: uv run --group test pytest

      - name: Build documents
        run: uv run --group doc make -C doc html

      - name: Minimize uv cache
        run: uv cache prune --ci
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Save uv cache
        uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ runner.temp }}/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
